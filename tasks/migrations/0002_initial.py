# Generated by Django 3.2 on 2021-05-10 16:44

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('labels', '0001_initial'),
        ('users', '0001_initial'),
        ('statuses', '0001_initial'),
        ('tasks', '0001_initial'),
    ]

    operations = [
        migrations.AddField(
            model_name='task',
            name='creator',
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name='task_creator',
                to='users.taskuser',
            ),
        ),
        migrations.AddField(
            model_name='task',
            name='executor',
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name='task_executor',
                to='users.taskuser',
            ),
        ),
        migrations.AddField(
            model_name='task',
            name='label',
            field=models.ManyToManyField(
                blank=True,
                through='tasks.LabelToTask',
                to='labels.Label',
            ),
        ),
        migrations.AddField(
            model_name='task',
            name='status',
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                to='statuses.status',
            ),
        ),
        migrations.AddField(
            model_name='labeltotask',
            name='label',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                to='labels.label',
            ),
        ),
        migrations.AddField(
            model_name='labeltotask',
            name='task',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                to='tasks.task',
            ),
        ),
    ]
